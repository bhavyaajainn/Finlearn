openapi: 3.0.0
info:
  title: Finlearn API
  description: Financial Learning and Research Platform
  version: 1.0.0
paths:
  /watchlist:
    get:
      tags:
      - watchlist
      summary: Get User Watchlist
      description: "Get detailed information about assets in a user's watchlist.\n\
        \nArgs:\n    user_id: User identifier\n    asset_type: Optional filter by\
        \ asset type\n    include_similar: Whether to include similar assets in response\n\
        \    \nReturns:\n    Detailed information about each asset in the watchlist"
      operationId: get_user_watchlist_watchlist_get
      parameters:
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          title: User Id
      - name: asset_type
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/AssetType'
          - type: 'null'
          title: Asset Type
      - name: include_similar
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Include Similar
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Get User Watchlist Watchlist Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /watchlist/search:
    post:
      tags:
      - watchlist
      summary: Search For Assets
      description: "Search for assets by name or symbol.\n\nArgs:\n    search_request:\
        \ Search parameters\n    \nReturns:\n    List of matching assets with minimal\
        \ info for fast display"
      operationId: search_for_assets_watchlist_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Search For Assets Watchlist Search Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /watchlist/add:
    post:
      tags:
      - watchlist
      summary: Add Asset To Watchlist
      description: "Add an asset to a user's watchlist.\n\nArgs:\n    asset: Asset\
        \ details to add\n    user_id: User identifier\n    \nReturns:\n    Confirmation\
        \ message and added asset details"
      operationId: add_asset_to_watchlist_watchlist_add_post
      parameters:
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          title: User Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAssetRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Add Asset To Watchlist Watchlist Add Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /watchlist/remove:
    delete:
      tags:
      - watchlist
      summary: Remove From User Watchlist
      description: "Remove an asset from a user's watchlist.\n\nArgs:\n    user_id:\
        \ User identifier\n    symbol: Asset symbol to remove\n    asset_type: Type\
        \ of asset\n    \nReturns:\n    Confirmation message"
      operationId: remove_from_user_watchlist_watchlist_remove_delete
      parameters:
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          title: User Id
      - name: symbol
        in: query
        required: true
        schema:
          type: string
          title: Symbol
      - name: asset_type
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AssetType'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                title: Response Remove From User Watchlist Watchlist Remove Delete
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /watchlist/research/{symbol}:
    get:
      tags:
      - watchlist
      summary: Get Deep Research Analysis
      description: Get comprehensive research article with embedded tooltips for an
        asset.
      operationId: get_deep_research_analysis_watchlist_research__symbol__get
      parameters:
      - name: symbol
        in: path
        required: true
        schema:
          type: string
          title: Symbol
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          title: User Id
      - name: asset_type
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AssetType'
      - name: include_comparison
        in: query
        required: false
        schema:
          type: boolean
          default: true
          title: Include Comparison
      - name: include_news
        in: query
        required: false
        schema:
          type: boolean
          default: true
          title: Include News
      - name: refresh
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Refresh
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Get Deep Research Analysis Watchlist Research  Symbol  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /user/recommendedtopics:
    get:
      tags:
      - learning
      summary: Get User Recommended Topics
      description: "Get personalized topic recommendations based on user's selected\
        \ categories and current news.\nArgs:\n    user_id: User identifier\n    refresh:\
        \ Force refresh topics even if cache exists\nReturns:\n    List of recommended\
        \ topics across user's selected categories"
      operationId: get_user_recommended_topics_user_recommendedtopics_get
      parameters:
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          title: User Id
      - name: category
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Category
      - name: refresh
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Refresh
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Get User Recommended Topics User Recommendedtopics
                  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /article/topic/{topic_id}:
    get:
      tags:
      - learning
      summary: Get Topic Article
      description: "Generate an article for a specific topic.\n\nArgs:\n    user_id:\
        \ User identifier\n    topic_id: ID of the topic to generate an article for\n\
        \    level: Optional override for expertise level\n    \nReturns:\n    Generated\
        \ article with tooltips for the specific topic"
      operationId: get_topic_article_article_topic__topic_id__get
      parameters:
      - name: topic_id
        in: path
        required: true
        schema:
          type: string
          title: Topic Id
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          title: User Id
      - name: level
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ExpertiseLevel'
      - name: refresh
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Refresh
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Get Topic Article Article Topic  Topic Id  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /article/topic/{topic_id}/stream:
    get:
      tags:
      - learning
      summary: Get Topic Article Streaming
      description: Streaming version that shows progress as article is generated.
      operationId: get_topic_article_streaming_article_topic__topic_id__stream_get
      parameters:
      - name: topic_id
        in: path
        required: true
        schema:
          type: string
          title: Topic Id
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          title: User Id
      - name: level
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ExpertiseLevel'
      - name: refresh
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Refresh
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tooltip/view:
    post:
      tags:
      - learning
      summary: Log Tooltip View
      description: "Log when a user views a tooltip explanation.\n\nArgs:\n    tooltip_data:\
        \ Data about the tooltip view\n    \nReturns:\n    Success confirmation"
      operationId: log_tooltip_view_tooltip_view_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TooltipView'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Log Tooltip View Tooltip View Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /summary:
    get:
      tags:
      - learning
      summary: Get User Summary
      description: Get a summary of user's reading activity with optimized performance.
      operationId: get_user_summary_summary_get
      parameters:
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          title: User Id
      - name: period
        in: query
        required: false
        schema:
          type: string
          default: day
          title: Period
      - name: start_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Start Date
      - name: end_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: End Date
      - name: refresh
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Refresh
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Get User Summary Summary Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /summary/progress-chart:
    get:
      tags:
      - learning
      summary: Get Progress Chart
      description: "Get user's reading progress data for charts.\n\nArgs:\n    user_id:\
        \ User identifier\n    period: Time period for the chart (week, month)\n \
        \   \nReturns:\n    Data suitable for progress charting"
      operationId: get_progress_chart_summary_progress_chart_get
      parameters:
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          title: User Id
      - name: period
        in: query
        required: false
        schema:
          type: string
          default: week
          title: Period
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Get Progress Chart Summary Progress Chart Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /user/streak:
    get:
      tags:
      - learning
      summary: Get User Streak
      description: "Get a user's learning streak information.\n\nArgs:\n    user_id:\
        \ User identifier\n    \nReturns:\n    Details about user's learning streak"
      operationId: get_user_streak_user_streak_get
      parameters:
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Get User Streak User Streak Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /summary/heatmap:
    get:
      tags:
      - learning
      summary: Get Yearly Heatmap
      description: "Get user's activity data for a full year calendar heatmap.\n\n\
        Args:\n    user_id: User identifier\n    year: Year to get data for (defaults\
        \ to current year)\n    \nReturns:\n    Daily activity counts suitable for\
        \ a calendar heatmap"
      operationId: get_yearly_heatmap_summary_heatmap_get
      parameters:
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          title: User Id
      - name: year
        in: query
        required: false
        schema:
          type: integer
          title: Year
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Get Yearly Heatmap Summary Heatmap Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /selectedcategories:
    get:
      tags:
      - selectedcategories
      summary: Get Selected Categories
      description: "Retrieve a list of selected categories\n\nArgs:\n    user_id:\
        \ User identifier\n    \nReturns:\n    Selected categories and expertise level\n\
        \    \nRaises:\n    HTTPException: If no categories are found for the user"
      operationId: get_selected_categories_selectedcategories_get
      parameters:
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          minLength: 3
          maxLength: 64
          pattern: ^[a-zA-Z0-9_-]+$
          title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categories'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - selectedcategories
      summary: Create Selected Categories
      description: "Create a new category and expertise level list.\n\nArgs:\n   \
        \ categories: Categories data to save\n    user_id: User identifier\n    \n\
        Returns:\n    The created categories data\n    \nRaises:\n    HTTPException:\
        \ If categories already exist for this user (overwrite protection)"
      operationId: create_selected_categories_selectedcategories_post
      parameters:
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          minLength: 3
          maxLength: 64
          pattern: ^[a-zA-Z0-9_-]+$
          title: User Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Categories'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categories'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - selectedcategories
      summary: Update Selected Categories
      description: "Update category and expertise level list.\n\nArgs:\n    categories:\
        \ Updated categories data\n    user_id: User identifier\n    \nReturns:\n\
        \    The updated categories data\n    \nRaises:\n    HTTPException: If no\
        \ categories exist for this user"
      operationId: update_selected_categories_selectedcategories_put
      parameters:
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          minLength: 3
          maxLength: 64
          pattern: ^[a-zA-Z0-9_-]+$
          title: User Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Categories'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categories'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /dashboard/home:
    get:
      tags:
      - dashboard
      summary: Get Dashboard Content
      operationId: get_dashboard_content_dashboard_home_get
      parameters:
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          title: User Id
      - name: refresh
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Refresh
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /dashboard/home/essential:
    get:
      tags:
      - dashboard
      summary: Get Dashboard Essential Content
      description: Get lighter dashboard content (glossary and quote) with parallel
        execution.
      operationId: get_dashboard_essential_content_dashboard_home_essential_get
      parameters:
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          title: User Id
      - name: refresh
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Refresh
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardEssentialResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /dashboard/home/news:
    get:
      tags:
      - dashboard
      summary: Get Dashboard News
      description: Get trending news for the dashboard.
      operationId: get_dashboard_news_dashboard_home_news_get
      parameters:
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          title: User Id
      - name: refresh
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Refresh
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardNewsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /dashboard/news/{news_id}:
    get:
      tags:
      - dashboard
      summary: Get News Article
      description: "Get detailed article about a trending news item with tooltips.\n\
        \nArgs:\n    news_id: ID of the news item\n    user_id: User identifier\n\
        \    refresh: Force refresh cached content\n    \nReturns:\n    Detailed article\
        \ with tooltips based on user's expertise level"
      operationId: get_news_article_dashboard_news__news_id__get
      parameters:
      - name: news_id
        in: path
        required: true
        schema:
          type: string
          title: News Id
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          title: User Id
      - name: refresh
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Refresh
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Get News Article Dashboard News  News Id  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /:
    get:
      summary: Root
      description: Root endpoint returning basic API information
      operationId: root__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /health:
    get:
      summary: Health Check
      description: Health check endpoint.
      operationId: health_check_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    AddAssetRequest:
      properties:
        symbol:
          type: string
          title: Symbol
        asset_type:
          $ref: '#/components/schemas/AssetType'
        notes:
          anyOf:
          - type: string
          - type: 'null'
          title: Notes
      type: object
      required:
      - symbol
      - asset_type
      title: AddAssetRequest
    AssetType:
      type: string
      enum:
      - stock
      - crypto
      title: AssetType
    Categories:
      properties:
        expertise_level:
          $ref: '#/components/schemas/ExpertiseLevel'
        categories:
          items:
            type: string
            maxLength: 100
            minLength: 1
          type: array
          maxItems: 50
          minItems: 1
          title: Categories
      type: object
      required:
      - expertise_level
      - categories
      title: Categories
    DashboardEssentialResponse:
      properties:
        user_id:
          type: string
          title: User Id
        expertise_level:
          type: string
          title: Expertise Level
        glossary_term:
          items:
            $ref: '#/components/schemas/GlossaryTerm'
          type: array
          title: Glossary Term
        quote:
          $ref: '#/components/schemas/Quote'
        timestamp:
          type: string
          format: date-time
          title: Timestamp
      type: object
      required:
      - user_id
      - expertise_level
      - glossary_term
      - quote
      - timestamp
      title: DashboardEssentialResponse
      description: Light dashboard response with glossary and quote only.
    DashboardNewsResponse:
      properties:
        user_id:
          type: string
          title: User Id
        trending_news:
          items:
            $ref: '#/components/schemas/NewsItem'
          type: array
          title: Trending News
        timestamp:
          type: string
          format: date-time
          title: Timestamp
      type: object
      required:
      - user_id
      - trending_news
      - timestamp
      title: DashboardNewsResponse
      description: Dashboard news response.
    DashboardResponse:
      properties:
        user_id:
          type: string
          title: User Id
        expertise_level:
          $ref: '#/components/schemas/ExpertiseLevel'
        glossary_term:
          items:
            $ref: '#/components/schemas/GlossaryTerm'
          type: array
          title: Glossary Term
        quote:
          $ref: '#/components/schemas/Quote'
        trending_news:
          items:
            $ref: '#/components/schemas/NewsItem'
          type: array
          title: Trending News
        timestamp:
          type: string
          format: date-time
          title: Timestamp
      type: object
      required:
      - user_id
      - expertise_level
      - glossary_term
      - quote
      - trending_news
      - timestamp
      title: DashboardResponse
    ExpertiseLevel:
      type: string
      enum:
      - beginner
      - intermediate
      - advanced
      title: ExpertiseLevel
    GlossaryTerm:
      properties:
        term:
          type: string
          title: Term
        definition:
          type: string
          title: Definition
        example:
          anyOf:
          - type: string
          - type: 'null'
          title: Example
      type: object
      required:
      - term
      - definition
      title: GlossaryTerm
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    NewsItem:
      properties:
        id:
          type: string
          title: Id
        title:
          type: string
          title: Title
        summary:
          type: string
          title: Summary
        source:
          type: string
          title: Source
        url:
          anyOf:
          - type: string
          - type: 'null'
          title: Url
        published_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Published At
        topics:
          items:
            type: string
          type: array
          title: Topics
      type: object
      required:
      - id
      - title
      - summary
      - source
      title: NewsItem
    Quote:
      properties:
        text:
          type: string
          title: Text
        author:
          anyOf:
          - type: string
          - type: 'null'
          title: Author
      type: object
      required:
      - text
      title: Quote
    SearchRequest:
      properties:
        query:
          type: string
          minLength: 2
          title: Query
        asset_type:
          anyOf:
          - $ref: '#/components/schemas/AssetType'
          - type: 'null'
        limit:
          type: integer
          maximum: 50.0
          minimum: 1.0
          title: Limit
          default: 10
      type: object
      required:
      - query
      title: SearchRequest
    TooltipView:
      properties:
        user_id:
          type: string
          title: User Id
        word:
          type: string
          title: Word
        tooltip:
          type: string
          title: Tooltip
        from_topic:
          anyOf:
          - type: string
          - type: 'null'
          title: From Topic
      type: object
      required:
      - user_id
      - word
      - tooltip
      title: TooltipView
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
servers:
- url: https://finlearn-217321872324.asia-south1.run.app
  description: Production server
